{"ast":null,"code":"import _toConsumableArray from \"/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { calculateAngle } from '../utils/formulas';\n\nfunction shoot(state, action) {\n  if (!state.gameState.started) return state;\n  var cannonBalls = state.gameState.cannonBalls;\n  if (cannonBalls.length === 2) return state;\n  var _action$mousePosition = action.mousePosition,\n      x = _action$mousePosition.x,\n      y = _action$mousePosition.y;\n  var angle = calculateAngle(0, 0, x, y);\n  var id = new Date().getTime();\n  var cannonBall = {\n    position: {\n      x: 0,\n      y: 0\n    },\n    angle: angle,\n    id: id\n  };\n  return _objectSpread({}, state, {\n    gameState: _objectSpread({}, state.gameState, {\n      cannonBalls: [].concat(_toConsumableArray(cannonBalls), [cannonBall])\n    })\n  });\n}\n\nexport default shoot;","map":{"version":3,"sources":["/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/src/reducers/shoot.js"],"names":["calculateAngle","shoot","state","action","gameState","started","cannonBalls","length","mousePosition","x","y","angle","id","Date","getTime","cannonBall","position"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,mBAA/B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,MAAtB,EAA8B;AAC5B,MAAI,CAACD,KAAK,CAACE,SAAN,CAAgBC,OAArB,EAA8B,OAAOH,KAAP;AADF,MAGpBI,WAHoB,GAGJJ,KAAK,CAACE,SAHF,CAGpBE,WAHoB;AAK5B,MAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B,OAAOL,KAAP;AALF,8BAOXC,MAAM,CAACK,aAPI;AAAA,MAOpBC,CAPoB,yBAOpBA,CAPoB;AAAA,MAOjBC,CAPiB,yBAOjBA,CAPiB;AAS5B,MAAMC,KAAK,GAAGX,cAAc,CAAC,CAAD,EAAI,CAAJ,EAAOS,CAAP,EAAUC,CAAV,CAA5B;AAEA,MAAME,EAAE,GAAI,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAX;AACA,MAAMC,UAAU,GAAG;AACjBC,IAAAA,QAAQ,EAAE;AAAEP,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KADO;AAEjBC,IAAAA,KAAK,EAALA,KAFiB;AAGjBC,IAAAA,EAAE,EAAFA;AAHiB,GAAnB;AAMA,2BACKV,KADL;AAEEE,IAAAA,SAAS,oBACJF,KAAK,CAACE,SADF;AAEPE,MAAAA,WAAW,+BAAMA,WAAN,IAAmBS,UAAnB;AAFJ;AAFX;AAOD;;AAED,eAAed,KAAf","sourcesContent":["import { calculateAngle } from '../utils/formulas';\n\nfunction shoot(state, action) {\n  if (!state.gameState.started) return state;\n\n  const { cannonBalls } = state.gameState;\n\n  if (cannonBalls.length === 2) return state;\n\n  const { x, y } = action.mousePosition;\n\n  const angle = calculateAngle(0, 0, x, y);\n\n  const id = (new Date()).getTime();\n  const cannonBall = {\n    position: { x: 0, y: 0 },\n    angle,\n    id,\n  };\n\n  return {\n    ...state,\n    gameState: {\n      ...state.gameState,\n      cannonBalls: [...cannonBalls, cannonBall],\n    }\n  };\n}\n\nexport default shoot;"]},"metadata":{},"sourceType":"module"}