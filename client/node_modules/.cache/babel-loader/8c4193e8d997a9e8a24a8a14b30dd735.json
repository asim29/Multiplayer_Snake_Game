{"ast":null,"code":"import _objectSpread from \"/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/src/components/Leaderboard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Login from './Login';\nimport Rank from \"./Rank\";\n\nvar Leaderboard = function Leaderboard(props) {\n  var style = {\n    fill: 'transparent',\n    stroke: 'black',\n    strokeDasharray: '15'\n  };\n  var leaderboardTitle = {\n    fontFamily: '\"Joti One\", cursive',\n    fontSize: 50,\n    fill: '#88da85',\n    cursor: 'default'\n  };\n  var leaderboard = props.leaderboard || [];\n  leaderboard = leaderboard.sort(function (prev, next) {\n    if (prev.maxScore === next.maxScore) {\n      return prev.name <= next.name ? 1 : -1;\n    }\n\n    return prev.maxScore < next.maxScore ? 1 : -1;\n  }).map(function (member, index) {\n    return _objectSpread({}, member, {\n      rank: index + 1,\n      currentPlayer: member.id === props.currentPlayer.id\n    });\n  }).filter(function (member, index) {\n    if (index < 3 || member.id === props.currentPlayer.id) return member;\n    return null;\n  });\n  return React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"text\", {\n    filter: \"url(#shadow)\",\n    style: leaderboardTitle,\n    x: \"-150\",\n    y: \"-630\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Leaderboard\"));\n};","map":{"version":3,"sources":["/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/src/components/Leaderboard.jsx"],"names":["React","PropTypes","Login","Rank","Leaderboard","props","style","fill","stroke","strokeDasharray","leaderboardTitle","fontFamily","fontSize","cursor","leaderboard","sort","prev","next","maxScore","name","map","member","index","rank","currentPlayer","id","filter"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC9B,MAAMC,KAAK,GAAG;AACXC,IAAAA,IAAI,EAAE,aADK;AAEXC,IAAAA,MAAM,EAAE,OAFG;AAGXC,IAAAA,eAAe,EAAE;AAHN,GAAd;AAMC,MAAMC,gBAAgB,GAAG;AACvBC,IAAAA,UAAU,EAAE,qBADW;AAEvBC,IAAAA,QAAQ,EAAE,EAFa;AAGvBL,IAAAA,IAAI,EAAE,SAHiB;AAIvBM,IAAAA,MAAM,EAAE;AAJe,GAAzB;AAOA,MAAIC,WAAW,GAAGT,KAAK,CAACS,WAAN,IAAqB,EAAvC;AACAA,EAAAA,WAAW,GAAGA,WAAW,CAACC,IAAZ,CAAiB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC7C,QAAID,IAAI,CAACE,QAAL,KAAkBD,IAAI,CAACC,QAA3B,EAAqC;AACnC,aAAOF,IAAI,CAACG,IAAL,IAAaF,IAAI,CAACE,IAAlB,GAAyB,CAAzB,GAA6B,CAAC,CAArC;AACD;;AACD,WAAOH,IAAI,CAACE,QAAL,GAAgBD,IAAI,CAACC,QAArB,GAAgC,CAAhC,GAAoC,CAAC,CAA5C;AACD,GALa,EAKXE,GALW,CAKP,UAACC,MAAD,EAASC,KAAT;AAAA,6BACFD,MADE;AAELE,MAAAA,IAAI,EAAED,KAAK,GAAG,CAFT;AAGLE,MAAAA,aAAa,EAAEH,MAAM,CAACI,EAAP,KAAcpB,KAAK,CAACmB,aAAN,CAAoBC;AAH5C;AAAA,GALO,EASVC,MATU,CASH,UAACL,MAAD,EAASC,KAAT,EAAmB;AAC5B,QAAIA,KAAK,GAAG,CAAR,IAAaD,MAAM,CAACI,EAAP,KAAcpB,KAAK,CAACmB,aAAN,CAAoBC,EAAnD,EAAuD,OAAOJ,MAAP;AACvD,WAAO,IAAP;AACD,GAZa,CAAd;AAcA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAM,IAAA,MAAM,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAEX,gBAAnC;AAAqD,IAAA,CAAC,EAAC,MAAvD;AAA8D,IAAA,CAAC,EAAC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,CADD;AASD,CAtCD","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Login from './Login';\nimport Rank from \"./Rank\";\n\nconst Leaderboard = (props) => {\n\tconst style = {\n    fill: 'transparent',\n    stroke: 'black',\n    strokeDasharray: '15',\n\t};\n\n  const leaderboardTitle = {\n    fontFamily: '\"Joti One\", cursive',\n    fontSize: 50,\n    fill: '#88da85',\n    cursor: 'default',\n  };\n\n  let leaderboard = props.leaderboard || [];\n  leaderboard = leaderboard.sort((prev, next) => {\n    if (prev.maxScore === next.maxScore) {\n      return prev.name <= next.name ? 1 : -1;\n    }\n    return prev.maxScore < next.maxScore ? 1 : -1;\n  }).map((member, index) => ({\n    ...member,\n    rank: index + 1,\n    currentPlayer: member.id === props.currentPlayer.id,\n  })).filter((member, index) => {\n    if (index < 3 || member.id === props.currentPlayer.id) return member;\n    return null;\n  });\n\n  return (\n  \t<g>\n      <text filter=\"url(#shadow)\" style={leaderboardTitle} x=\"-150\" y=\"-630\">\n      \tLeaderboard\n      </text>\n      \n  \t</g>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}