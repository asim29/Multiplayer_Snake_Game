{"ast":null,"code":"import _objectSpread from \"/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { calculateAngle } from '../utils/formulas';\nimport createFlyingObjects from './createFlyingObjects';\nimport moveBalls from './moveCannonBalls';\n\nfunction moveObjects(state, action) {\n  if (!state.gameState.started) return state;\n  var cannonBalls = moveBalls(state.gameState.cannonBalls);\n  var mousePosition = action.mousePosition || {\n    x: 0,\n    y: 0\n  };\n  var newState = createFlyingObjects(state);\n  var now = new Date().getTime();\n  var flyingObjects = newState.gameState.flyingObjects.filter(function (object) {\n    return now - object.createdAt < 4000;\n  });\n  var x = mousePosition.x,\n      y = mousePosition.y;\n  var angle = calculateAngle(0, 0, x, y);\n  return _objectSpread({}, newState, {\n    gameState: _objectSpread({}, newState.gameState, {\n      flyingObjects: flyingObjects,\n      cannonBalls: cannonBalls\n    }),\n    angle: angle\n  });\n}\n\nexport default moveObjects;","map":{"version":3,"sources":["/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/src/reducers/moveObjects.js"],"names":["calculateAngle","createFlyingObjects","moveBalls","moveObjects","state","action","gameState","started","cannonBalls","mousePosition","x","y","newState","now","Date","getTime","flyingObjects","filter","object","createdAt","angle"],"mappings":";AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,MAAI,CAACD,KAAK,CAACE,SAAN,CAAgBC,OAArB,EAA8B,OAAOH,KAAP;AAE9B,MAAII,WAAW,GAAGN,SAAS,CAACE,KAAK,CAACE,SAAN,CAAgBE,WAAjB,CAA3B;AAEA,MAAMC,aAAa,GAAGJ,MAAM,CAACI,aAAP,IAAwB;AAC5CC,IAAAA,CAAC,EAAE,CADyC;AAE5CC,IAAAA,CAAC,EAAE;AAFyC,GAA9C;AAKA,MAAMC,QAAQ,GAAGX,mBAAmB,CAACG,KAAD,CAApC;AAEA,MAAMS,GAAG,GAAI,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAZ;AAEA,MAAIC,aAAa,GAAGJ,QAAQ,CAACN,SAAT,CAAmBU,aAAnB,CAAiCC,MAAjC,CAAwC,UAAAC,MAAM;AAAA,WAC/DL,GAAG,GAAGK,MAAM,CAACC,SAAd,GAA2B,IADqC;AAAA,GAA9C,CAApB;AAdkC,MAkB1BT,CAlB0B,GAkBjBD,aAlBiB,CAkB1BC,CAlB0B;AAAA,MAkBvBC,CAlBuB,GAkBjBF,aAlBiB,CAkBvBE,CAlBuB;AAmBlC,MAAMS,KAAK,GAAGpB,cAAc,CAAC,CAAD,EAAI,CAAJ,EAAOU,CAAP,EAAUC,CAAV,CAA5B;AACA,2BACKC,QADL;AAEEN,IAAAA,SAAS,oBACJM,QAAQ,CAACN,SADL;AAEPU,MAAAA,aAAa,EAAbA,aAFO;AAGPR,MAAAA,WAAW,EAAXA;AAHO,MAFX;AAOEY,IAAAA,KAAK,EAALA;AAPF;AASD;;AAED,eAAejB,WAAf","sourcesContent":["import { calculateAngle } from '../utils/formulas';\nimport createFlyingObjects from './createFlyingObjects';\nimport moveBalls from './moveCannonBalls';\n\nfunction moveObjects(state, action) {\n  if (!state.gameState.started) return state;\n\n  let cannonBalls = moveBalls(state.gameState.cannonBalls);\n\n  const mousePosition = action.mousePosition || {\n    x: 0,\n    y: 0,\n  };\n\n  const newState = createFlyingObjects(state);\n\n  const now = (new Date()).getTime();\n\n  let flyingObjects = newState.gameState.flyingObjects.filter(object => (\n    (now - object.createdAt) < 4000\n  ));\n\n  const { x, y } = mousePosition;\n  const angle = calculateAngle(0, 0, x, y);\n  return {\n    ...newState,\n    gameState: {\n      ...newState.gameState,\n      flyingObjects,\n      cannonBalls,\n    },\n    angle,\n  };\n}\n\nexport default moveObjects;"]},"metadata":{},"sourceType":"module"}