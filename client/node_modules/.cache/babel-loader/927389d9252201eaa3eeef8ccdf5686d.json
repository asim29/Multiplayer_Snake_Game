{"ast":null,"code":"var _jsxFileName = \"/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/client/src/components/Canvas.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sky from './Sky';\nimport Ground from './Ground';\nimport CannonBase from './CannonBase';\nimport CannonPipe from './CannonPipe';\nimport CannonBall from './CannonBall';\nimport CurrentScore from './CurrentScore';\nimport FlyingObject from './FlyingObject';\nimport StartGame from './StartGame';\nimport Title from './Title';\nimport Leaderboard from './Leaderboard';\nimport { signIn } from 'auth0-web';\nimport Heart from './Heart';\n\nvar Canvas = function Canvas(props) {\n  var gameHeight = 1200;\n  var viewBox = [window.innerWidth / -2, 100 - gameHeight, window.innerWidth, gameHeight];\n  var lives = [];\n\n  for (var i = 0; i < props.gameState.lives; i++) {\n    var heartPosition = {\n      x: -180 - i * 70,\n      y: 36\n    };\n    lives.push(React.createElement(Heart, {\n      key: i,\n      position: heartPosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"svg\", {\n    id: \"aliens-go-home-canvas\",\n    preserveAspectRatio: \"xMaxYMax none\",\n    onMouseMove: props.trackMouse,\n    viewBox: viewBox,\n    onClick: props.shoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"filter\", {\n    id: \"shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"feDropShadow\", {\n    dx: \"1\",\n    dy: \"1\",\n    stdDeviation: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))), React.createElement(Sky, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Ground, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), props.gameState.cannonBalls.map(function (cannonBall) {\n    return React.createElement(CannonBall, {\n      key: cannonBall.id,\n      position: cannonBall.position,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }), React.createElement(CannonPipe, {\n    rotation: props.angle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(CannonBase, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(CurrentScore, {\n    score: props.gameState.kills,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), !props.gameState.started && React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(StartGame, {\n    onClick: function onClick() {\n      return props.startGame();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Leaderboard, {\n    currentPlayer: props.currentPlayer,\n    authenticate: signIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), props.gameState.flyingObjects.map(function (flyingObject) {\n    return React.createElement(FlyingObject, {\n      key: flyingObject.id,\n      position: flyingObject.position,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }), lives);\n};\n\nCanvas.propTypes = {\n  angle: PropTypes.number.isRequired,\n  gameState: PropTypes.shape({\n    started: PropTypes.bool.isRequired,\n    kills: PropTypes.number.isRequired,\n    lives: PropTypes.number.isRequired,\n    flyingObjects: PropTypes.arrayOf(PropTypes.shape({\n      position: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired\n      }).isRequired,\n      id: PropTypes.number.isRequired\n    })).isRequired\n  }).isRequired,\n  trackMouse: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n  currentPlayer: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired\n  }),\n  players: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired\n  })),\n  shoot: PropTypes.func.isRequired\n};\nCanvas.defaultProps = {\n  currentPlayer: null,\n  players: null\n};\nexport default Canvas;","map":{"version":3,"sources":["/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/client/src/components/Canvas.jsx"],"names":["React","PropTypes","Sky","Ground","CannonBase","CannonPipe","CannonBall","CurrentScore","FlyingObject","StartGame","Title","Leaderboard","signIn","Heart","Canvas","props","gameHeight","viewBox","window","innerWidth","lives","i","gameState","heartPosition","x","y","push","trackMouse","shoot","cannonBalls","map","cannonBall","id","position","angle","kills","started","startGame","currentPlayer","flyingObjects","flyingObject","propTypes","number","isRequired","shape","bool","arrayOf","func","string","maxScore","name","picture","players","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Sky from './Sky';\nimport Ground from './Ground';\nimport CannonBase from './CannonBase';\nimport CannonPipe from './CannonPipe';\nimport CannonBall from './CannonBall'\nimport CurrentScore from './CurrentScore'\nimport FlyingObject from './FlyingObject';\nimport StartGame from './StartGame';\nimport Title from './Title';\nimport Leaderboard from './Leaderboard';\nimport { signIn } from 'auth0-web';\nimport Heart from './Heart';\n\nconst Canvas = (props) => {\n  const gameHeight = 1200;\n  const viewBox = [window.innerWidth / -2, \n            100 - gameHeight, \n            window.innerWidth, \n            gameHeight];\n  const lives = [];\n  for(let i = 0; i < props.gameState.lives; i++){\n    const heartPosition = {\n      x: -180 - (i*70),\n      y: 36\n    };\n    lives.push(<Heart key={i} position={heartPosition}/>);\n  }\n\n  return (\n    <svg\n      id=\"aliens-go-home-canvas\"\n      preserveAspectRatio=\"xMaxYMax none\"\n      onMouseMove={props.trackMouse}\n      viewBox={viewBox}\n      onClick={props.shoot}\n    >\n      <defs>\n        <filter id=\"shadow\">\n          <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"2\" />\n        </filter>\n      </defs>\n      <Sky />\n      <Ground />\n      {props.gameState.cannonBalls.map(cannonBall => (\n        <CannonBall\n          key={cannonBall.id}\n          position={cannonBall.position}\n        />\n      ))}\n      <CannonPipe rotation={props.angle} />\n      <CannonBase />\n      <CurrentScore score={props.gameState.kills} />\n\n      { ! props.gameState.started &&\n        <g>\n          <StartGame onClick={() => props.startGame()} />\n          <Title />\n          <Leaderboard currentPlayer={props.currentPlayer} \n                        authenticate={signIn} \n                        />\n        </g>\n      }\n\n      {props.gameState.flyingObjects.map(flyingObject => (\n        <FlyingObject\n          key={flyingObject.id}\n          position={flyingObject.position}\n        />\n      ))}\n      {lives}\n    </svg>\n  );\n};\n\nCanvas.propTypes = {\n  angle: PropTypes.number.isRequired,\n  gameState: PropTypes.shape({\n    started: PropTypes.bool.isRequired,\n    kills: PropTypes.number.isRequired,\n    lives: PropTypes.number.isRequired,\n    flyingObjects: PropTypes.arrayOf(PropTypes.shape({\n      position: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired\n      }).isRequired,\n      id: PropTypes.number.isRequired,\n    })).isRequired,\n  }).isRequired,\n  trackMouse: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n  currentPlayer: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n  }),\n  players: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n  })),\n  shoot: PropTypes.func.isRequired,\n};\n\nCanvas.defaultProps = {\n  currentPlayer: null,\n  players: null,\n};\n\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}