{"ast":null,"code":"import _objectSpread from \"/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/src/components/Leaderboard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Login from './Login';\nimport Rank from \"./Rank\";\n\nvar Leaderboard = function Leaderboard(props) {\n  var style = {\n    fill: 'transparent',\n    stroke: 'black',\n    strokeDasharray: '15'\n  };\n  var leaderboardTitle = {\n    fontFamily: '\"Joti One\", cursive',\n    fontSize: 50,\n    fill: '#88da85',\n    cursor: 'default'\n  };\n  var leaderboard = props.leaderboard || [];\n  leaderboard = leaderboard.sort(function (prev, next) {\n    if (prev.maxScore === next.maxScore) {\n      return prev.name <= next.name ? 1 : -1;\n    }\n\n    return prev.maxScore < next.maxScore ? 1 : -1;\n  }).map(function (member, index) {\n    return _objectSpread({}, member, {\n      rank: index + 1,\n      currentPlayer: member.id === props.currentPlayer.id\n    });\n  }).filter(function (member, index) {\n    if (index < 3 || member.id === props.currentPlayer.id) return member;\n    return null;\n  });\n  return React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"text\", {\n    filter: \"url(#shadow)\",\n    style: leaderboardTitle,\n    x: \"-150\",\n    y: \"-630\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Leaderboard\"), React.createElement(\"rect\", {\n    style: style,\n    x: \"-350\",\n    y: \"-600\",\n    width: \"700\",\n    height: \"330\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), props.currentPlayer && leaderboard.map(function (player, idx) {\n    var position = {\n      x: -100,\n      y: -530 + 70 * idx\n    };\n    return React.createElement(Rank, {\n      key: player.id,\n      player: player,\n      position: position,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }), !props.currentPlayer && React.createElement(Login, {\n    authenticate: props.authenticate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n};\n\nLeaderboard.propTypes = {\n  currentPlayer: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired\n  }),\n  authenticate: PropTypes.func.isRequired,\n  leaderboard: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n    ranking: PropTypes.number\n  }))\n};\nLeaderboard.defaultProps = {\n  currentPlayer: null,\n  leaderboard: null\n};\nexport default Leaderboard;","map":{"version":3,"sources":["/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/src/components/Leaderboard.jsx"],"names":["React","PropTypes","Login","Rank","Leaderboard","props","style","fill","stroke","strokeDasharray","leaderboardTitle","fontFamily","fontSize","cursor","leaderboard","sort","prev","next","maxScore","name","map","member","index","rank","currentPlayer","id","filter","player","idx","position","x","y","authenticate","propTypes","shape","string","isRequired","number","picture","func","arrayOf","ranking","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Login from './Login';\nimport Rank from \"./Rank\";\n\nconst Leaderboard = (props) => {\n\tconst style = {\n    fill: 'transparent',\n    stroke: 'black',\n    strokeDasharray: '15',\n\t};\n\n  const leaderboardTitle = {\n    fontFamily: '\"Joti One\", cursive',\n    fontSize: 50,\n    fill: '#88da85',\n    cursor: 'default',\n  };\n\n  let leaderboard = props.leaderboard || [];\n  leaderboard = leaderboard.sort((prev, next) => {\n    if (prev.maxScore === next.maxScore) {\n      return prev.name <= next.name ? 1 : -1;\n    }\n    return prev.maxScore < next.maxScore ? 1 : -1;\n  }).map((member, index) => ({\n    ...member,\n    rank: index + 1,\n    currentPlayer: member.id === props.currentPlayer.id,\n  })).filter((member, index) => {\n    if (index < 3 || member.id === props.currentPlayer.id) return member;\n    return null;\n  });\n\n  return (\n    <g>\n      <text filter=\"url(#shadow)\" style={leaderboardTitle} x=\"-150\" y=\"-630\">\n      \tLeaderboard\n      </text>\n      <rect style={style} x=\"-350\" y=\"-600\" width=\"700\" height=\"330\" />\n      {\n        props.currentPlayer && leaderboard.map((player, idx) => {\n          const position = {\n            x: -100,\n            y: -530 + (70 * idx)\n          };\n          return <Rank key={player.id} player={player} position={position}/>\n        })\n      }\n      {\n        ! props.currentPlayer && <Login authenticate={props.authenticate} />\n      }\n    </g>\n  );\n};\n\nLeaderboard.propTypes = {\n  currentPlayer: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n  }),\n  authenticate: PropTypes.func.isRequired,\n  leaderboard: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    maxScore: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n    ranking: PropTypes.number,\n  })),\n};\n\nLeaderboard.defaultProps = {\n  currentPlayer: null,\n  leaderboard: null,\n};\n\nexport default Leaderboard;"]},"metadata":{},"sourceType":"module"}