{"ast":null,"code":"import { checkCollision } from '../utils/formulas';\nimport { gameHeight } from '../utils/constants';\n\nvar checkCollisions = function checkCollisions(cannonBalls, flyingDiscs) {\n  var objectsDestroyed = [];\n  flyingDiscs.forEach(function (flyingDisc) {\n    var currentLifeTime = new Date().getTime() - flyingDisc.createdAt;\n    var calculatedPosition = {\n      x: flyingDisc.position.x,\n      y: flyingDisc.position.y + currentLifeTime / 4000 * gameHeight\n    };\n    var rectA = {\n      x1: calculatedPosition.x - 40,\n      y1: calculatedPosition.y - 10,\n      x2: calculatedPosition.x + 40,\n      y2: calculatedPosition.y + 10\n    };\n    cannonBalls.forEach(function (cannonBall) {\n      var rectB = {\n        x1: cannonBall.position.x - 8,\n        y1: cannonBall.position.y - 8,\n        x2: cannonBall.position.x + 8,\n        y2: cannonBall.position.y + 8\n      };\n\n      if (checkCollision(rectA, rectB)) {\n        objectsDestroyed.push({\n          cannonBallId: cannonBall.id,\n          flyingDiscId: flyingDisc.id\n        });\n      }\n    });\n  });\n  return objectsDestroyed;\n};\n\nexport default checkCollisions;","map":{"version":3,"sources":["/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/client/src/reducers/checkCollisions.js"],"names":["checkCollision","gameHeight","checkCollisions","cannonBalls","flyingDiscs","objectsDestroyed","forEach","flyingDisc","currentLifeTime","Date","getTime","createdAt","calculatedPosition","x","position","y","rectA","x1","y1","x2","y2","cannonBall","rectB","push","cannonBallId","id","flyingDiscId"],"mappings":"AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAcC,WAAd,EAA8B;AACpD,MAAMC,gBAAgB,GAAG,EAAzB;AACAD,EAAAA,WAAW,CAACE,OAAZ,CAAoB,UAACC,UAAD,EAAgB;AAClC,QAAMC,eAAe,GAAI,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyBH,UAAU,CAACI,SAA5D;AACA,QAAMC,kBAAkB,GAAG;AACzBC,MAAAA,CAAC,EAAEN,UAAU,CAACO,QAAX,CAAoBD,CADE;AAEzBE,MAAAA,CAAC,EAAER,UAAU,CAACO,QAAX,CAAoBC,CAApB,GAA0BP,eAAe,GAAG,IAAnB,GAA2BP;AAF9B,KAA3B;AAIA,QAAMe,KAAK,GAAG;AACZC,MAAAA,EAAE,EAAEL,kBAAkB,CAACC,CAAnB,GAAuB,EADf;AAEZK,MAAAA,EAAE,EAAEN,kBAAkB,CAACG,CAAnB,GAAuB,EAFf;AAGZI,MAAAA,EAAE,EAAEP,kBAAkB,CAACC,CAAnB,GAAuB,EAHf;AAIZO,MAAAA,EAAE,EAAER,kBAAkB,CAACG,CAAnB,GAAuB;AAJf,KAAd;AAMAZ,IAAAA,WAAW,CAACG,OAAZ,CAAoB,UAACe,UAAD,EAAgB;AAClC,UAAMC,KAAK,GAAG;AACZL,QAAAA,EAAE,EAAEI,UAAU,CAACP,QAAX,CAAoBD,CAApB,GAAwB,CADhB;AAEZK,QAAAA,EAAE,EAAEG,UAAU,CAACP,QAAX,CAAoBC,CAApB,GAAwB,CAFhB;AAGZI,QAAAA,EAAE,EAAEE,UAAU,CAACP,QAAX,CAAoBD,CAApB,GAAwB,CAHhB;AAIZO,QAAAA,EAAE,EAAEC,UAAU,CAACP,QAAX,CAAoBC,CAApB,GAAwB;AAJhB,OAAd;;AAMA,UAAIf,cAAc,CAACgB,KAAD,EAAQM,KAAR,CAAlB,EAAkC;AAChCjB,QAAAA,gBAAgB,CAACkB,IAAjB,CAAsB;AACpBC,UAAAA,YAAY,EAAEH,UAAU,CAACI,EADL;AAEpBC,UAAAA,YAAY,EAAEnB,UAAU,CAACkB;AAFL,SAAtB;AAID;AACF,KAbD;AAcD,GA1BD;AA2BA,SAAOpB,gBAAP;AACD,CA9BD;;AAgCA,eAAeH,eAAf","sourcesContent":["import { checkCollision } from '../utils/formulas';\nimport { gameHeight } from '../utils/constants';\n\nconst checkCollisions = (cannonBalls, flyingDiscs) => {\n  const objectsDestroyed = [];\n  flyingDiscs.forEach((flyingDisc) => {\n    const currentLifeTime = (new Date()).getTime() - flyingDisc.createdAt;\n    const calculatedPosition = {\n      x: flyingDisc.position.x,\n      y: flyingDisc.position.y + ((currentLifeTime / 4000) * gameHeight),\n    };\n    const rectA = {\n      x1: calculatedPosition.x - 40,\n      y1: calculatedPosition.y - 10,\n      x2: calculatedPosition.x + 40,\n      y2: calculatedPosition.y + 10,\n    };\n    cannonBalls.forEach((cannonBall) => {\n      const rectB = {\n        x1: cannonBall.position.x - 8,\n        y1: cannonBall.position.y - 8,\n        x2: cannonBall.position.x + 8,\n        y2: cannonBall.position.y + 8,\n      };\n      if (checkCollision(rectA, rectB)) {\n        objectsDestroyed.push({\n          cannonBallId: cannonBall.id,\n          flyingDiscId: flyingDisc.id,\n        });\n      }\n    });\n  });\n  return objectsDestroyed;\n};\n\nexport default checkCollisions;"]},"metadata":{},"sourceType":"module"}