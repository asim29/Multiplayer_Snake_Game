{"ast":null,"code":"import { checkCollision } from '../utils/formulas';\nimport { gameHeight } from '../utils/constants';\n\nvar checkCollisions = function checkCollisions(cannonBalls, flyingDiscs) {\n  var objectsDestroyed = [];\n  flyingDiscs.forEach(function (flyingDisc) {\n    var currentLifeTime = new Date().getTime() - flyingDisc.createdAt;\n    var calculatedPosition = {\n      x: flyingDisc.position.x,\n      y: flyingDisc.position.y + currentLifeTime / 4000 * gameHeight\n    };\n    var rectA = {\n      x1: calculatedPosition.x - 40,\n      y1: calculatedPosition.y - 10,\n      x2: calculatedPosition.x + 40,\n      y2: calculatedPosition.y + 10\n    };\n    cannonBalls.forEach(function (cannonBall) {\n      var rectB = {\n        x1: cannonBall.position.x - 8,\n        y1: cannonBall.position.y - 8,\n        x2: cannonBall.position.x + 8,\n        y2: cannonBall.position.y + 8\n      };\n\n      if (checkCollision(rectA, rectB)) {\n        objectsDestroyed.push({\n          cannonBallId: cannonBall.id,\n          flyingDiscId: flyingDisc.id\n        });\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/home/asim/Documents/LUMS/Semester_6/Snake_Game/snake_game/src/reducers/checkCollisions.js"],"names":["checkCollision","gameHeight","checkCollisions","cannonBalls","flyingDiscs","objectsDestroyed","forEach","flyingDisc","currentLifeTime","Date","getTime","createdAt","calculatedPosition","x","position","y","rectA","x1","y1","x2","y2","cannonBall","rectB","push","cannonBallId","id","flyingDiscId"],"mappings":"AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAcC,WAAd,EAA8B;AACrD,MAAMC,gBAAgB,GAAG,EAAzB;AACAD,EAAAA,WAAW,CAACE,OAAZ,CAAqB,UAAAC,UAAU,EAAI;AAClC,QAAMC,eAAe,GAAI,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyBH,UAAU,CAACI,SAA5D;AACA,QAAMC,kBAAkB,GAAG;AAC1BC,MAAAA,CAAC,EAAEN,UAAU,CAACO,QAAX,CAAoBD,CADG;AAE1BE,MAAAA,CAAC,EAAER,UAAU,CAACO,QAAX,CAAoBC,CAApB,GAA0BP,eAAe,GAAG,IAAnB,GAA2BP;AAF7B,KAA3B;AAIA,QAAMe,KAAK,GAAG;AACbC,MAAAA,EAAE,EAAEL,kBAAkB,CAACC,CAAnB,GAAuB,EADd;AAEbK,MAAAA,EAAE,EAAEN,kBAAkB,CAACG,CAAnB,GAAuB,EAFd;AAGbI,MAAAA,EAAE,EAAEP,kBAAkB,CAACC,CAAnB,GAAuB,EAHd;AAIbO,MAAAA,EAAE,EAAER,kBAAkB,CAACG,CAAnB,GAAuB;AAJd,KAAd;AAMAZ,IAAAA,WAAW,CAACG,OAAZ,CAAoB,UAACe,UAAD,EAAgB;AACnC,UAAMC,KAAK,GAAG;AACbL,QAAAA,EAAE,EAAEI,UAAU,CAACP,QAAX,CAAoBD,CAApB,GAAwB,CADf;AAEbK,QAAAA,EAAE,EAAEG,UAAU,CAACP,QAAX,CAAoBC,CAApB,GAAwB,CAFf;AAGbI,QAAAA,EAAE,EAAEE,UAAU,CAACP,QAAX,CAAoBD,CAApB,GAAwB,CAHf;AAIbO,QAAAA,EAAE,EAAEC,UAAU,CAACP,QAAX,CAAoBC,CAApB,GAAwB;AAJf,OAAd;;AAMA,UAAGf,cAAc,CAACgB,KAAD,EAAQM,KAAR,CAAjB,EAAiC;AAChCjB,QAAAA,gBAAgB,CAACkB,IAAjB,CAAsB;AACrBC,UAAAA,YAAY,EAAEH,UAAU,CAACI,EADJ;AAErBC,UAAAA,YAAY,EAAEnB,UAAU,CAACkB;AAFJ,SAAtB;AAIA;AACD,KAbD;AAcA,GA1BD;AA2BA,CA7BD","sourcesContent":["import { checkCollision } from '../utils/formulas';\nimport { gameHeight } from '../utils/constants';\n\nconst checkCollisions = (cannonBalls, flyingDiscs) => {\n\tconst objectsDestroyed = []\n\tflyingDiscs.forEach((flyingDisc => {\n\t\tconst currentLifeTime = (new Date()).getTime() - flyingDisc.createdAt;\n\t\tconst calculatedPosition = {\n\t\t\tx: flyingDisc.position.x,\n\t\t\ty: flyingDisc.position.y + ((currentLifeTime / 4000) * gameHeight),\n\t\t};\n\t\tconst rectA = {\n\t\t\tx1: calculatedPosition.x - 40,\n\t\t\ty1: calculatedPosition.y - 10,\n\t\t\tx2: calculatedPosition.x + 40,\n\t\t\ty2: calculatedPosition.y + 10,\n\t\t};\n\t\tcannonBalls.forEach((cannonBall) => {\n\t\t\tconst rectB = {\n\t\t\t\tx1: cannonBall.position.x - 8,\n\t\t\t\ty1: cannonBall.position.y - 8,\n\t\t\t\tx2: cannonBall.position.x + 8,\n\t\t\t\ty2: cannonBall.position.y + 8,\n\t\t\t};\n\t\t\tif(checkCollision(rectA, rectB)) {\n\t\t\t\tobjectsDestroyed.push({\n\t\t\t\t\tcannonBallId: cannonBall.id,\n\t\t\t\t\tflyingDiscId: flyingDisc.id,\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}))\n}"]},"metadata":{},"sourceType":"module"}